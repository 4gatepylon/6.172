#!/usr/bin/perl -w

use strict;
use warnings;
use v5.26;

use Getopt::Std;

my $of = "consistencytest.h";
open my $ofh, '>', $of or die "can't open $of for writing: $!";

my (@cr, @ds);

foreach(split ' ', `find . -type f -name "*.c"`) {
  open my $sfh, '<', $_ or die "can't open $_ for reading: $!";
  while(<$sfh>){
    push @cr, $1 if(/^CHECK_REP\((\w+)\)/);
    push @ds, $1 if(/^DUMP_DS\((\w+)\)/);
  }
}


my $gencr = "", my $gends = "", my $gendss = "";
$gencr .= "int check_rep_$_(void);\n" foreach(@cr);

# not good practice: lean on clang-format
foreach(@ds){
  $gends .= "void dump_ds_$_(void);\n";
  $gendss .= "if(strcmp(DS, \"$_\") == 0) dump_ds_$_();";
}

my $ch = <<ESKEL;
#ifndef CONSISTENCY_TEST_H
#define CONSISTENCY_TEST_H

/* This file is autogenerated! Don't touch it
 * Headers for the consistency checker -- including
 * CHECK_REP and DUMP_DS. To use:
 *
 * -> optionally, define a CHECK_REP(my_data_structure_name)
 *  in the C file you're working on. in this function, check
 *  that internal invariants hold and that the state of your
 *  data structure is consistent. next, place calls to
 *  SHOULD_CHECK_REP(my_data_structure_name) wherever you
 *  want the rep checked. if leiserchess is not compiled
 *  in pedantic mode and the check_rep flag is set via UCI,
 *  your function will get called here
 *
 * -> optionally, define a DUMP_DS(my_data_structure_name)
 *  in the C file you're working on. In this function, print out
 *  your data structure prefixed by "info" lines so it doesn't
 *  screw up the GUI. In the UCI, then, type "dump my_data_structure_name"
 *  and the rest is taken care of. Magic!
 *
 * Further examples are in util.c for the myrand "data structure"
 */

#include "options.h"

#define CHECK_REP_SUCCESS 0
#define CHECK_REP_FAILURE 1

#ifndef PEDANTIC

$gencr
$gends

#define CHECK_REP(DS) int check_rep_##DS(void)

#define SHOULD_CHECK_REP(DS) do{\\
  if (CHECK_REP == 1) {\\
    int res;\\
    res = check_rep_##DS();\\
    if (res != 0) {\\
      printf("info check_rep_%s failed! killing\\n", #DS);\\
      exit(1);\\
    }\\
  }\\
}while(0)

#define DUMP_DS(DS) void dump_ds_##DS(void)
#define DO_DUMP(DS) do{\\
  $gendss\\
}while(0)

#else /* PEDANTIC */

#define CHECK_REP(DS) static __attribute__((unused)) int check_rep_##DS(void)
#define SHOULD_CHECK_REP(DS)

#define DUMP_DS(DS) static __attribute__((unused)) void dump_ds_##DS(void)
#define DO_DUMP(DS)

#endif /* PEDANTIC */

#endif /* CONSISTENCY_TEST_H */
ESKEL

print $ofh $ch;
close $ofh;
`clang-format -i $of`;

