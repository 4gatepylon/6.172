#!/usr/bin/perl -w

use strict;
use warnings;
use v5.26;

use Getopt::Std;

my %ah = ();
getopt 't', \%ah;

my $of = "unittest.h";
open my $ofh, '>', $of or die "can't open $of for writing: $!";

my @hdrs = ();
my $genhdrs = "";
my $genptrs = "";
my $testnms = "";
my $ntdef = "";

foreach(keys %ah){
  $genhdrs = "int run_unit_tests(void);\n\n";

  foreach(split ' ', `find . -type f -name "*.c"`) {
    open my $sfh, '<', $_ or die "can't open $_ for reading: $!";
    while(<$sfh>){
      if(/^UNIT_TEST_FN\((\w+)\)/){
        $genhdrs .= "int $1(void);\n";
        push @hdrs, $1;
      }
    }
    my $nh = @hdrs;
    $ntdef = "#define NUM_UNIT_TESTS $nh";
    $testnms = "static const char *test_fn_names[$nh] = {\"" . join('","', @hdrs) . "\"};";
    $genptrs = "static int (*const test_fns[$nh])(void) = {" . join(',', @hdrs) . "};";
  
  }
}

my $uth = <<ESKEL;
#ifndef UNIT_TEST_H
#define UNIT_TEST_H

/* Unit testing framework
 * Don't edit this file, it is autogenerated!
 *
 * Denote unit tests with
 * #if UNIT_TEST
 * ...
 * #endif
 *
 * The unit tests get compiled out at build
 * time universally unless the UNIT_TEST flag
 * is set -- don't manually mess with this flag
 * since the unit test build makes other tweaks
 * to main() for everything to work okay.
 */

#ifndef UNIT_TEST
#define UNIT_TEST_FN(NAME) static __attribute__((unused)) int NAME(void)
#else /* ! UNIT_TEST */
#define UNIT_TEST_FN(NAME) int NAME(void)
#endif /* ! UNIT_TEST */

#define UNIT_TEST_SUCCESS 0
#define UNIT_TEST_FAILURE 1

$genhdrs
$ntdef
$testnms
$genptrs

#endif /* UNIT_TEST_H */
ESKEL

print $ofh $uth;
close $ofh;
`clang-format -i $of`;
